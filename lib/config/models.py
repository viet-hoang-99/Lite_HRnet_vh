# ------------------------------------------------------------------------------
# Copyright (c) Microsoft
# Licensed under the MIT License.
# Written by Bin Xiao (Bin.Xiao@microsoft.com)
# ------------------------------------------------------------------------------

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

from yacs.config import CfgNode as CN


# pose_resnet related params
POSE_RESNET = CN()
POSE_RESNET.NUM_LAYERS = 50
POSE_RESNET.DECONV_WITH_BIAS = False
POSE_RESNET.NUM_DECONV_LAYERS = 3
POSE_RESNET.NUM_DECONV_FILTERS = [256, 256, 256]
POSE_RESNET.NUM_DECONV_KERNELS = [4, 4, 4]
POSE_RESNET.FINAL_CONV_KERNEL = 1
POSE_RESNET.PRETRAINED_LAYERS = ['*']

# pose_multi_resoluton_net related params
POSE_HIGH_RESOLUTION_NET = CN()
POSE_HIGH_RESOLUTION_NET.PRETRAINED_LAYERS = ['*']
POSE_HIGH_RESOLUTION_NET.STEM_INPLANES = 64
POSE_HIGH_RESOLUTION_NET.FINAL_CONV_KERNEL = 1

POSE_HIGH_RESOLUTION_NET.STAGE2 = CN()
POSE_HIGH_RESOLUTION_NET.STAGE2.NUM_MODULES = 1
POSE_HIGH_RESOLUTION_NET.STAGE2.NUM_BRANCHES = 2
POSE_HIGH_RESOLUTION_NET.STAGE2.NUM_BLOCKS = [4, 4]
POSE_HIGH_RESOLUTION_NET.STAGE2.NUM_CHANNELS = [32, 64]
POSE_HIGH_RESOLUTION_NET.STAGE2.BLOCK = 'BASIC'
POSE_HIGH_RESOLUTION_NET.STAGE2.FUSE_METHOD = 'SUM'

POSE_HIGH_RESOLUTION_NET.STAGE3 = CN()
POSE_HIGH_RESOLUTION_NET.STAGE3.NUM_MODULES = 1
POSE_HIGH_RESOLUTION_NET.STAGE3.NUM_BRANCHES = 3
POSE_HIGH_RESOLUTION_NET.STAGE3.NUM_BLOCKS = [4, 4, 4]
POSE_HIGH_RESOLUTION_NET.STAGE3.NUM_CHANNELS = [32, 64, 128]
POSE_HIGH_RESOLUTION_NET.STAGE3.BLOCK = 'BASIC'
POSE_HIGH_RESOLUTION_NET.STAGE3.FUSE_METHOD = 'SUM'

POSE_HIGH_RESOLUTION_NET.STAGE4 = CN()
POSE_HIGH_RESOLUTION_NET.STAGE4.NUM_MODULES = 1
POSE_HIGH_RESOLUTION_NET.STAGE4.NUM_BRANCHES = 4
POSE_HIGH_RESOLUTION_NET.STAGE4.NUM_BLOCKS = [4, 4, 4, 4]
POSE_HIGH_RESOLUTION_NET.STAGE4.NUM_CHANNELS = [32, 64, 128, 256]
POSE_HIGH_RESOLUTION_NET.STAGE4.BLOCK = 'BASIC'
POSE_HIGH_RESOLUTION_NET.STAGE4.FUSE_METHOD = 'SUM'

# lite hrnet
LITE_HRNET = CN()
LITE_HRNET.STEM = CN()
LITE_HRNET.STEM.STEM_CHANELS = 32
LITE_HRNET.STEM.OUT_CHANELS = 32
LITE_HRNET.STEM.EXPAND_RATIOS = 1

LITE_HRNET.STAGE0 = CN()
LITE_HRNET.STAGE0.NUM_MODULES = 3
LITE_HRNET.STAGE0.NUM_BRANCHES = 2
LITE_HRNET.STAGE0.NUM_BLOCK = 2
LITE_HRNET.STAGE0.MODULE_TYPE = 'LITE'
LITE_HRNET.STAGE0.REDUCE_RATIO = 8
LITE_HRNET.STAGE0.WITH_FUSE = True
LITE_HRNET.STAGE0.NUM_CHANELS = [40, 80]

LITE_HRNET.STAGE1 = CN()
LITE_HRNET.STAGE1.NUM_MODULES = 8
LITE_HRNET.STAGE1.NUM_BRANCHES = 3
LITE_HRNET.STAGE1.NUM_BLOCK = 2
LITE_HRNET.STAGE1.MODULE_TYPE = 'LITE'
LITE_HRNET.STAGE1.REDUCE_RATIO = 8
LITE_HRNET.STAGE1.WITH_FUSE = True
LITE_HRNET.STAGE1.NUM_CHANELS = [40, 80, 160]

LITE_HRNET.STAGE2 = CN()
LITE_HRNET.STAGE2.NUM_MODULES = 3
LITE_HRNET.STAGE2.NUM_BRANCHES = 4
LITE_HRNET.STAGE2.NUM_BLOCK = 2
LITE_HRNET.STAGE2.MODULE_TYPE = 'LITE'
LITE_HRNET.STAGE2.REDUCE_RATIO = 8
LITE_HRNET.STAGE2.WITH_FUSE = True
LITE_HRNET.STAGE2.NUM_CHANELS = [40, 80, 160, 320]

LITE_HRNET.KEYPOINTS_HEAD = CN()
LITE_HRNET.KEYPOINTS_HEAD.IN_CHANELS = 40
LITE_HRNET.KEYPOINTS_HEAD.OUT_CHANELS = 17
LITE_HRNET.KEYPOINTS_HEAD.NUM_DECONV_LAYERS = 0
LITE_HRNET.KEYPOINTS_HEAD.FINAL_CONV_KERNEL = 1



MODEL_EXTRAS = {
    'pose_resnet': POSE_RESNET,
    'pose_high_resolution_net': POSE_HIGH_RESOLUTION_NET,
    'lite_hrnet': LITE_HRNET
}
